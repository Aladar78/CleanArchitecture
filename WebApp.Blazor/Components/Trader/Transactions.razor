@page "/trader/transactions"

@using Experts.Trader.FindTransactions
@using System.ComponentModel

@inject NavigationManager NavigationManager
@inject IServiceClient serviceClient;

<PageTitle>Trade Execution Page</PageTitle>

<p>
    This page allows Traders to execute manual trades when necessary, providing a more hands-on approach.
</p>

<p>
    <Set Columns="viewModel.TransationColumns" Rows="viewModel.Transactions"></Set>
</p>
Elements:
<br />
Order Entry Form: Traders can select the asset, choose the order type (market, limit, stop), and specify the quantity and price.
<br />
Order Book: Displays the real-time order book for the selected asset, allowing Traders to see market depth and place trades accordingly.
<br />
<br />

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    ViewModel viewModel;
    string Name;
    CancellationTokenSource tcs = new();

    protected override async Task OnInitializedAsync() {
        var requestModel = new RequestModel(
            Name,
            userId: HttpContext.User.Identity?.Name ?? "123");
        viewModel = await serviceClient.Execute(requestModel, tcs.Token);
    }
}

