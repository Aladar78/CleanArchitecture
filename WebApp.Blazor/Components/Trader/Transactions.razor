@page "/trader/transactions"

@using Experts.Trader.ReadTransactions;
@using Common.Business.Model;

@inject Feature ReadTransactions;

<PageTitle>Trade Execution Page</PageTitle>

<p>
    This page allows Traders to execute manual trades when necessary, providing a more hands-on approach.
</p>

<p>
    <Set Columns="transationColumns" Rows="transactions"></Set>
</p>
Elements:
<br />
Order Entry Form: Traders can select the asset, choose the order type (market, limit, stop), and specify the quantity and price.
<br />
Order Book: Displays the real-time order book for the selected asset, allowing Traders to see market depth and place trades accordingly.
<br />
<br />

@code {
    List<Expression<Func<TransactionVM, object>>> transationColumns = [];
    List<TransactionVM> transactions = [];


    protected override async Task OnInitializedAsync() {
        transationColumns.Add(x => x.Id);
        transationColumns.Add(x => x.Name);

        var request = new Feature.Request() { Name = null};
        var response = await ReadTransactions.Execute(request, CancellationToken.None);
        transactions = response.Transactions.Select(TransactionVM.FrormBusiness).ToList();
    }


    public record TransactionVM(long Id, string Name) {
        public static TransactionVM FrormBusiness(TransactionBM bm)=> new TransactionVM(bm.Id, bm.Name);
    }

}
